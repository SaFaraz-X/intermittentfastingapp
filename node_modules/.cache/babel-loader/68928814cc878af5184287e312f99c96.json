{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmckeon/intermittentfastingapp/src/Clock.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport CountdownUnit from './CountdownUnit'; // This should be in the 'History' section of the application\n\nclass Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countdown: [{\n        unit: 'days',\n        value: ''\n      }, {\n        unit: 'hours',\n        value: ''\n      }, {\n        unit: 'mins',\n        value: ''\n      }, {\n        unit: 'secs',\n        value: ''\n      }],\n      dateInput: '',\n      timeInput: '',\n      ampm: 'am',\n      modalStyle: {\n        display: 'none'\n      },\n      countdownStyle: {\n        display: 'none'\n      },\n      infoMessage: '',\n      infoStyle: {\n        display: 'none'\n      },\n      errorMessage: '',\n      errorStyle: {\n        display: 'none'\n      },\n      // Real-time clock\n      time: new Date().toLocaleString()\n    };\n    this.timer = null;\n    this.endDate = JSON.parse(localStorage.getItem('countdownTimer')) || '';\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.endDate = moment(`${this.state.dateInput} ${this.state.timeInput} ${this.state.ampm}`, 'MM-DD-YYYY hh:mm a').format('X');\n\n    if (this.endDate - moment().format('X') < 1) {\n      this.setState({\n        errorMessage: 'The countdown must be set to a future date.',\n        errorStyle: {\n          display: 'block'\n        }\n      });\n    } else if (!moment(this.state.dateInput, 'MM-DD-YYYY', true).isValid()) {\n      this.setState({\n        errorMessage: 'Date input must be a valid date set in MM-DD-YYYY format.',\n        errorStyle: {\n          display: 'block'\n        }\n      });\n    } else if (!moment(this.state.timeInput, 'hh:mm', true).isValid()) {\n      this.setState({\n        errorMessage: 'Time input must be valid according to the 12-hour clock set in hh:mm format.',\n        errorStyle: {\n          display: 'block'\n        }\n      });\n    } else {\n      this.startCountdown();\n      this.closeModal();\n      this.setState({\n        dateInput: '',\n        timeInput: '',\n        ampm: 'am'\n      });\n    }\n  }\n\n  startCountdown() {\n    localStorage.setItem('countdownTimer', JSON.stringify(this.endDate));\n    let countdown = this.state.countdown;\n    let distance;\n    clearInterval(this.timer);\n\n    if (this.endDate !== '') {\n      this.timer = setInterval(() => {\n        distance = this.endDate - moment().format('X');\n\n        if (distance > 0) {\n          // Remember that 'countdown' is a list of objects\n          countdown[0]['value'] = parseInt(distance / (60 * 60 * 24), 10); // Days\n\n          countdown[1].value = parseInt(distance % (60 * 60 * 24) / (60 * 60), 10); // Hours\n\n          countdown[2].value = parseInt(distance % (60 * 60) / 60, 10); // Minutes\n\n          countdown[3].value = parseInt(distance % 60, 10); // Seconds\n\n          this.setState({\n            countdown,\n            countdownStyle: {\n              display: 'block'\n            },\n            infoStyle: {\n              display: 'none'\n            }\n          });\n        } else {\n          countdown = countdown.map(unit => {\n            unit.value = '';\n            return unit;\n          });\n          clearInterval(this.timer);\n          this.setState({\n            countdown,\n            countdownStyle: {\n              display: 'none'\n            },\n            infoMessage: 'Countdown ended. Click the Settings button to start a new countdown.',\n            infoStyle: {\n              display: 'block'\n            }\n          });\n          this.endDate = '';\n          localStorage.setItem('countdownTimer', JSON.stringify(this.endDate));\n        }\n      });\n      this.setState({\n        errorMessage: '',\n        errorStyle: {\n          display: 'none'\n        }\n      });\n    } else {\n      this.setState({\n        infoMessage: 'Click the Settings button to start a new countdown.',\n        infoStyle: {\n          display: 'block'\n        }\n      });\n    }\n  }\n\n  clearCountdown() {\n    let countdown = this.state.countdown;\n\n    if (this.endDate !== '') {\n      clearInterval(this.timer);\n      countdown = countdown.map(unit => {\n        unit.value = '';\n        return unit;\n      });\n      this.setState({\n        countdown,\n        countdownStyle: {\n          display: 'none'\n        },\n        infoMessage: 'Countdown cleared. Click the Settings button to start a new countdown.',\n        infoStyle: {\n          display: 'block'\n        }\n      });\n      this.endDate = '';\n      localStorage.setItem('countdownTimer', JSON.stringify(this.endDate));\n    } else {\n      alert('No countdown has been set. Please click the Settings button to start a new countdown.');\n    }\n  }\n\n  openModal() {\n    this.setState({\n      modalStyle: {\n        display: 'block'\n      }\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      modalStyle: {\n        display: 'none'\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 1000);\n    this.startCountdown();\n    window.addEventListener('click', event => {\n      if (event.target.id === 'modal') {\n        this.closeModal();\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  tick() {\n    this.setState({\n      time: new Date().toLocaleString()\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }, \" Real-Time Clock\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"App-clock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }, \"The time is \", this.state.time, \".\"), /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"header-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }\n    }, \"Countdown Timer\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-item button-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"button header-button clear\",\n      onClick: () => this.clearCountdown(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, \"Clear\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"button header-button settings\",\n      onClick: () => this.openModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, \"Settings\"))), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal\",\n      id: \"modal\",\n      style: this.state.modalStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 15\n      }\n    }, \"Set New Countdown\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => this.handleSubmit(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"date-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"dateInput\",\n      onChange: event => this.handleChange(event),\n      value: this.state.dateInput,\n      placeholder: \"MM-DD-YYYY\",\n      id: \"date-input\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"time-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }\n    }, \"Time\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"timeInput\",\n      onChange: event => this.handleChange(event),\n      value: this.state.timeInput,\n      placeholder: \"hh:mm\",\n      id: \"time-input\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"ampm-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }, \"AM/PM\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"select-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      name: \"ampm\",\n      onChange: event => this.handleChange(event),\n      value: this.state.ampm,\n      id: \"ampm-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"am\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 25\n      }\n    }, \"AM\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"pm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 25\n      }\n    }, \"PM\")))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"message error-message\",\n      style: this.state.errorStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-exclamation-circle fa-lg fa-fw\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 86\n      }\n    }), \" \", this.state.errorMessage), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"button modal-button\",\n      value: \"Start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"button modal-button\",\n      onClick: () => this.closeModal(),\n      value: \"Cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"countdown\",\n      style: this.state.countdownStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    }, \"Countdown ends in...\"), this.state.countdown.map((countdownUnit, index) => /*#__PURE__*/React.createElement(CountdownUnit, {\n      key: index,\n      countdownUnit: countdownUnit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 65\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"message info-message\",\n      style: this.state.infoStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-info-circle fa-lg fa-fw\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 76\n      }\n    }), \" \", this.state.infoMessage)), /*#__PURE__*/React.createElement(\"footer\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }\n    }, \"Created by \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://autumnbullard-portfolio.herokuapp.com\",\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 28\n      }\n    }, \"Autumn Bullard\"), \" \\xA9 \", new Date().getFullYear()));\n  }\n\n}\n\nexport default Clock;","map":{"version":3,"sources":["/Users/matthewmckeon/intermittentfastingapp/src/Clock.js"],"names":["React","Component","moment","CountdownUnit","Clock","constructor","props","state","countdown","unit","value","dateInput","timeInput","ampm","modalStyle","display","countdownStyle","infoMessage","infoStyle","errorMessage","errorStyle","time","Date","toLocaleString","timer","endDate","JSON","parse","localStorage","getItem","handleChange","event","setState","target","name","handleSubmit","preventDefault","format","isValid","startCountdown","closeModal","setItem","stringify","distance","clearInterval","setInterval","parseInt","map","clearCountdown","alert","openModal","componentDidMount","intervalID","tick","window","addEventListener","id","componentWillUnmount","render","countdownUnit","index","getFullYear"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\nimport CountdownUnit from './CountdownUnit';\n\n// This should be in the 'History' section of the application\n\nclass Clock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            countdown: [\n                {\n                unit: 'days',\n                value: ''\n                },\n                {\n                unit: 'hours',\n                value: ''\n                },\n                {\n                unit: 'mins',\n                value: ''\n                },\n                {\n                unit: 'secs',\n                value: ''\n                }\n            ],\n    \n            dateInput: '',\n            timeInput: '',\n            ampm: 'am',\n        \n            modalStyle: {display: 'none'},\n            countdownStyle: {display: 'none'},\n        \n            infoMessage: '',\n            infoStyle: {display: 'none'},\n        \n            errorMessage: '',\n            errorStyle: {display: 'none'},\n\n            // Real-time clock\n            time: new Date().toLocaleString()\n\n        };\n    \n        this.timer = null;\n        this.endDate = JSON.parse(localStorage.getItem('countdownTimer')) || '';\n      }\n    \n      handleChange(event) {\n        this.setState({\n          [event.target.name]: event.target.value\n        });\n      }\n    \n      handleSubmit(event) {\n    \n        event.preventDefault();\n        this.endDate = moment(`${this.state.dateInput} ${this.state.timeInput} ${this.state.ampm}`, 'MM-DD-YYYY hh:mm a').format('X');\n    \n        if ((this.endDate - moment().format('X')) < 1) {\n          this.setState({\n            errorMessage: 'The countdown must be set to a future date.',\n            errorStyle: {display: 'block'}\n          });\n        } else if (!moment(this.state.dateInput, 'MM-DD-YYYY', true).isValid()) {\n          this.setState({\n            errorMessage: 'Date input must be a valid date set in MM-DD-YYYY format.',\n            errorStyle: {display: 'block'}\n          });\n        } else if (!moment(this.state.timeInput, 'hh:mm', true).isValid()) {\n          this.setState({\n            errorMessage: 'Time input must be valid according to the 12-hour clock set in hh:mm format.',\n            errorStyle: {display: 'block'}\n          });\n        } else {\n          this.startCountdown();\n          this.closeModal();\n          this.setState({\n            dateInput: '',\n            timeInput: '',\n            ampm: 'am'\n    \n          });\n        }\n      }\n    \n      startCountdown() {\n        localStorage.setItem('countdownTimer', JSON.stringify(this.endDate));\n        let countdown = this.state.countdown;\n        let distance;\n    \n        clearInterval(this.timer);\n    \n        if (this.endDate !== '') {\n          this.timer = setInterval(() => {\n            distance = this.endDate - moment().format('X');\n    \n            if (distance > 0) {\n    \n              // Remember that 'countdown' is a list of objects\n              countdown[0]['value'] = parseInt(distance / (60 * 60 * 24), 10); // Days\n              countdown[1].value = parseInt(distance % (60 * 60 * 24) / (60 * 60), 10); // Hours\n              countdown[2].value = parseInt(distance % (60 * 60) / (60), 10); // Minutes\n              countdown[3].value = parseInt(distance % 60, 10); // Seconds\n    \n              this.setState({\n                countdown,\n                countdownStyle: {display: 'block'},\n                infoStyle: {display: 'none'}\n              });\n            }\n    \n            else {\n              countdown = countdown.map(unit => {\n                unit.value = '';\n                return unit;\n              });\n              clearInterval(this.timer);\n              this.setState({\n                countdown,\n                countdownStyle: {display: 'none'},\n                infoMessage: 'Countdown ended. Click the Settings button to start a new countdown.',\n                infoStyle: {display: 'block'}\n              });\n              this.endDate = '';\n              localStorage.setItem('countdownTimer', JSON.stringify(this.endDate));\n            }\n          });\n          this.setState({\n            errorMessage: '',\n            errorStyle: {display: 'none'}\n          });\n        }\n        else {\n          this.setState({\n            infoMessage: 'Click the Settings button to start a new countdown.',\n            infoStyle: {display: 'block'}\n          });\n        }\n      }\n\n      clearCountdown() {\n        let countdown = this.state.countdown;\n        if (this.endDate !== '') {\n            clearInterval(this.timer);\n            countdown = countdown.map(unit => {\n              unit.value = '';\n              return unit;\n            });\n            this.setState({\n              countdown,\n              countdownStyle: {display: 'none'},\n              infoMessage: 'Countdown cleared. Click the Settings button to start a new countdown.',\n              infoStyle: {display: 'block'}\n            });\n            this.endDate = '';\n            localStorage.setItem('countdownTimer', JSON.stringify(this.endDate));\n          \n        }\n        else {\n          alert('No countdown has been set. Please click the Settings button to start a new countdown.')\n        }\n      }\n    \n      openModal() {\n        this.setState({\n          modalStyle: {display: 'block'}\n        });\n      }\n    \n      closeModal() {\n        this.setState({\n          modalStyle: {display: 'none'}\n        });\n      }\n    \n      componentDidMount() {\n        this.intervalID = setInterval(\n            () => this.tick(),\n            1000\n          );\n        this.startCountdown();\n        window.addEventListener('click', (event) => {\n          if (event.target.id === 'modal') {\n            this.closeModal();\n          }\n        });\n      }\n\n    componentWillUnmount() {\n      clearInterval(this.intervalID);\n    }\n    tick() {\n      this.setState({\n        time: new Date().toLocaleString()\n      });\n    }\n    render() {\n      return (\n        <div className=\"body\">\n\n        {/* REAL-TIME CLOCK*/}\n        <h1 > Real-Time Clock</h1>\n        <p className=\"App-clock\">\n          The time is {this.state.time}.\n        </p>\n\n        {/* HEADER */}\n        <header>\n          <h1 className=\"header-item\">Countdown Timer</h1>\n          <div className=\"header-item button-group\">\n            <button type=\"button\" className=\"button header-button clear\" onClick={() => this.clearCountdown()}>Clear</button>\n            <button type=\"button\" className=\"button header-button settings\" onClick={() => this.openModal()}>Settings</button>\n          </div>\n        </header>\n        <main>\n\n          {/* SETTINGS MODAL */}\n          <div className=\"modal\" id=\"modal\" style={this.state.modalStyle}>\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">Set New Countdown</div>\n              <div className=\"modal-body\">\n                <form onSubmit={(event) => this.handleSubmit(event)}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"date-input\">Date</label>\n                    <input type=\"text\" name=\"dateInput\" onChange={(event) => this.handleChange(event)} value={this.state.dateInput} placeholder=\"MM-DD-YYYY\" id=\"date-input\" required />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"time-input\">Time</label>\n                    <input type=\"text\" name=\"timeInput\" onChange={(event) => this.handleChange(event)} value={this.state.timeInput} placeholder=\"hh:mm\" id=\"time-input\" required />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"ampm-input\">AM/PM</label>\n                    <div className=\"select-wrapper\">\n                      <select name=\"ampm\" onChange={(event) => this.handleChange(event)} value={this.state.ampm} id=\"ampm-input\">\n                        <option value=\"am\">AM</option>\n                        <option value=\"pm\">PM</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  {/* ERROR MESSAGE */}\n                  <p className=\"message error-message\" style={this.state.errorStyle}><span className=\"fa fa-exclamation-circle fa-lg fa-fw\"></span> {this.state.errorMessage}</p>\n                  <div className=\"button-group\">\n                    <input type=\"submit\" className=\"button modal-button\" value=\"Start\" />\n                    <input type=\"button\" className=\"button modal-button\" onClick={() => this.closeModal()} value=\"Cancel\" />\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n\n          {/* COUNTDOWN TIMER */}\n          <div className=\"countdown\" style={this.state.countdownStyle}>\n            <p>Countdown ends in...</p>\n            {this.state.countdown.map((countdownUnit, index) => <CountdownUnit key={index} countdownUnit={countdownUnit} />)}\n          </div>\n          <p className=\"message info-message\" style={this.state.infoStyle}><span className=\"fa fa-info-circle fa-lg fa-fw\"></span> {this.state.infoMessage}</p>\n        </main>\n\n        {/* FOOTER */}\n        <footer>Created by <a href=\"https://autumnbullard-portfolio.herokuapp.com\" target=\"_blank\">Autumn Bullard</a> &copy; {new Date().getFullYear()}</footer>\n       \n      </div>\n          \n\n      );\n    }\n  }\n  \n  export default Clock;"]},"metadata":{},"sourceType":"module"}